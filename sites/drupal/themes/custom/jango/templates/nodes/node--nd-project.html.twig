{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}

{% set current = url('<current>')['#markup'] %}

{% if current|slice(-7) == '/teaser' %}

  <article{{ attributes.addClass('node-nd-project teaser') }}>
    <div class="cbp-l-inline">
      <div class="cbp-l-inline-left">
        {{ content.field_images }}
      </div>
      <div class="cbp-l-inline-right">
        <div class="cbp-l-inline-title">
          {{ label }}
        </div>
        <div class="cbp-l-inline-subtitle">
          {{ content.field_client }}
        </div>
        <div class="cbp-l-inline-desc">
          {{ content|without('field_images', 'field_client', 'field_url_the_site', 'links') }}
        </div>

        {% set site_url = content.field_url_the_site|render|striptags %}
        {% if site_url is not empty %}
          <a href="{{ site_url }}" target="_blank"
             class="cbp-l-inline-view btn btn-sm c-btn-square c-btn-border-1x c-btn-dark c-btn-uppercase c-btn-bold">
            {{ 'View project'|upper|t }}
          </a>
        {% endif %}
      </div>
    </div>
  </article>

{% else %}

  <article{{ attributes.addClass('node-nd-project') }}>
    <div class="cbp-popup-content">
      <div class="cbp-l-project-title">
        {{ label }}
      </div>
      <div class="cbp-l-project-subtitle">
        {{ content.field_small_description }}
      </div>
      {{ content.field_images }}
      <div class="cbp-l-project-container">
        <div class="cbp-l-project-desc">
          <div class="cbp-l-project-desc-title">
            <span>{{ 'Project Description'|t }}</span>
          </div>
          <div class="cbp-l-project-desc-text">
            {{ content|without('field_images', 'field_small_description', 'field_client', 'field_categories', 'field_comments', 'links') }}
          </div>
        </div>
        <div class="cbp-l-project-details">
          <div class="cbp-l-project-details-title">
            <span>{{ 'Project Details'|t }}</span>
          </div>

          <ul class="cbp-l-project-details-list display-inline">
            <li>
              <strong>{{ 'Client'|t }}</strong>
              {{ content.field_client }}
            </li>
            <li>
              <strong>{{ 'Date' }}</strong>
              {{ node.getCreatedTime()|date('d M Y') }}
            </li>
            <li>
              <strong>{{ 'Categories' }}</strong>
              {{ content.field_categories }}
            </li>
          </ul>

          {% set site_url = content.field_url_the_site|render|striptags %}
          {% if site_url is not empty %}
            <a href="{{ site_url }}" target="_blank"
               class="cbp-l-inline-view btn btn-sm c-btn-square c-btn-border-1x c-btn-dark c-btn-uppercase c-btn-bold">
              {{ 'View project'|upper|t }}
            </a>
          {% endif %}
        </div>
      </div>
      <br/>
      <br/>
      <br/>
    </div>
  </article>

{% endif %}
